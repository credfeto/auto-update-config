[
        { "packageId": "AsyncFixer", "type": "Code analysis" },
        { "packageId": "DisableDateTimeNow", "type": "Code analysis" },
        { "packageId": "NSubstitute.Analyzers.CSharp", "type": "Code analysis" },
        { "packageId": "Microsoft.CodeAnalysis.FxCopAnalyzers", "type": "Code analysis" },
        { "packageId": "SonarAnalyzer.CSharp", "type": "Code analysis" },
        { "packageId": "xunit.analyzers", "type": "Code analysis" },
        { "packageId": "FunFair.CodeAnalysis", "type": "Code analysis" },
        { "packageId": "Microsoft.VisualStudio.Threading.Analyzers", "type": "Code analysis" },
        { "packageId": "Roslynator.Analyzers", "type": "Code analysis" },
        { "packageId": "Jetbrains.Annotations", "type": "Resharper Code Annotations" },        

        { "packageId": "SourceLink.Create.CommandLine", "type": "Source Link" },
        
        { "packageId": "Microsoft.CodeAnalysis.Analyzers", "type": "Code Analysis" },
        { "packageId": "Microsoft.CodeAnalysis.CSharp.Workspaces", "type": "Code Analysis" },

        { "packageId": "xunit", "type": "Test Infrastructure" },
        { "packageId": "NSubstitute", "type": "Test Infrastructure" },
        { "packageId": "Microsoft.NET.Test.Sdk", "type": "Test Infrastructure" },
        { "packageId": "TeamCity.VSTest.TestAdapter", "type": "Test Infrastructure" },
        { "packageId": "xunit.runner.visualstudio", "type": "Test Infrastructure" },
        { "packageId": "FunFair.Test.Common", "type": "Test Infrastructure" },

        { "packageId": "LibGit2Sharp", "type": "Build Infrastructure" },
        
        { "packageId": "NBitcoin", "type": "BitCoin/BIP39 key handling" },
        { "packageId": "dotnetstandard-bip39", "type": "BIP39 key handling" },
        
        { "packageId": "Castle.Core", "type": "Dependency Injection" },
        { "packageId": "HexMate", "type": "Hex to byte conversion" },
        { "packageId": "HtmlAgilityPack", "type": "HTML Parser" },
        { "packageId": "Profanity.Detector", "type": "Profanity detection" } ,
        { "packageId": "FunFair.ProfanityDetector", "type": "Profanity detection" },
        { "packageId": "FluentValidation.AspNetCore", "type": "Validation" },
        { "packageId": "IPAddressRange", "type": "IP Addresses" },
        { "packageId": "UAParser", "type": "User Agent Parser" },
        { "packageId": "Newtonsoft.Json", "type": "JSON Converter" },
        { "packageId": "Dapper", "type": "Database infrastructure" },
  
        { "packageId": "MaxMind.GeoIP2", "type": "IP: Country Lookup" },
        { "packageId": "MaxMind.MinFraud", "type": "IP: Fraud detection" },
  
        { "packageId": "FunFair.Trulioo.Client", "type": "KYC" },
  
        { "packageId": "FunFair.Ethereum.Proxy.Client", "type": "Proxy Client" }
]
